// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String
  lastName  String
  phone     String
  gender    String   //deve ser um de "Masculino, feminino ou Outro" fazer o enum depois
  imageSrc  String     
  createdAt DateTime @default(now())
  birthDate DateTime

  //parte do password
  hash String
  salt String

  //Fazer ser obrigatorio a criação de tanto um cart quanto uma wishlist, mesmo que vazios
  //na criação do usuário
  cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId     String   @unique
  wishlist   Wishlist  @relation(fields: [wishlistId], references: [id])
  wishlistId String   @unique

  //relaçoes com outras models
  orders Order[]
  reviews Review[]
}

////todos são placeholder pra não dar erro

model Cart{
  id       String   @id @default(uuid())
  owner    User?

}

model Wishlist{
  id       String   @id @default(uuid())
  owner    User?

}

model Order{
  id        String   @id @default(uuid())
  ownerId String 
  owner    User   @relation(fields: [ownerId], references: [id])
}

model Review{
  id        String   @id @default(uuid())
  ownerId String
  owner    User   @relation(fields: [ownerId], references: [id])
}